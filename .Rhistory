View(data)
policies <- read.csv("ACTL31425110AssignmentData2022.csv")
View(data)
View(policies)
policies[1]
policies[,1]
policies[1,]
policies[1,]$claim_loss_date
levels(policies$claim_loss_date)
levels(as.factor(policies$claim_loss_date))
?ifelse
ifelse(policies$claim_loss_date == "", NA)
policies$claim_loss_date == ""
if(policies$claim_loss_date == "", NA)
if(policies$claim_loss_date == "", NA, policies$claim_loss_date)
ifelse(policies$claim_loss_date == "", NA, policies$claim_loss_date)
policies[,142]$claim_loss_date
policies[142,]$claim_loss_date
policies$claim_loss_date <- ifelse(policies$claim_loss_date == "", NA, policies$claim_loss_date)
library(lubridate)
install.packages("lubridate")
library(lubridate)
policies[142,]$claim_loss_date
date(policies[142,]$claim_loss_date)
lubridate
?lubridate
is.POSIXct(policies[142,]$claim_loss_date)
is.POSIXt(policies[142,]$claim_loss_date)
strptime(policies[142,]$claim_loss_date)
strptime(policies[142,]$claim_loss_date, format="")
library(dplyr)
install.packages("dplyr")
policies %>% select(claim_loss_date) %>% filter(!is.na(claim_loss_date))
library(dplyr)
policies %>% select(claim_loss_date) %>% filter(!is.na(claim_loss_date))
policies %>% select(claim_loss_date) %>% filter(!is.na(claim_loss_date))
strptime(policies[142,]$claim_loss_date, format="%Y-%m-%d %H:%M:%S+%z")
strptime(policies[142,]$claim_loss_date, format="%Y-%m-%d %H:%M:%S+%z", tz="GMT")
ymd_hms(policies[142,]$claim_loss_date)
ymd_hms(policies[142,]$claim_loss_date, tz="GMT")
ymd_hms(policies[142,]$claim_loss_date, tz="GMT10")
ymd_hms(policies[142,]$claim_loss_date, tz="GMT+10")
ymd_hms(policies[142,]$claim_loss_date, tz="GMT+9")
policies%>% select(claim_loss_date) %>% filter(!is.na(claim_loss_date))
ymd_hms(policies[952172,]$claim_loss_date)
#strptime(policies[142,]$claim_loss_date, format="%Y-%m-%d %H:%M:%S+%z", tz="GMT")
policies[142,]$claim_loss_date
ymd_hms(policies[142,]$claim_loss_date)
ymd_hms(policies[142,]$claim_loss_date, tz="UTC+10")
ymd_hms(policies[142,]$claim_loss_date, tz="UTC-10")
ymd_hms(policies$claim_loss_date)
policies$claim_loss_date <- ymd_hms(policies$claim_loss_date)
levels(as.factor(policies$term_start_date))
levels(as.factor(policies$accident_month))
levels(as.factor(policies$term_expiry_date))
policies$term_start_date <- ymd_hms(policies$term_start_date)
policies$term_expiry_date <- ymd_hms(policies$term_expiry_date)
ymd(policies$accident_month)
policies$accident_month <- ymd(policies$accident_month)
policies[1,]$exposure
policies[1,]$exposure * 365
levels(as.factor(policies$exposure))
0.0849315068493151 * 365
levels(as.factor(policies$exposure)) * 365
exposures <-as.numeric(levels(as.factor(policies$exposure)))
exposures * 365
exposures * 365
policies %>% mutate(exposure_days = exposure * 365)
View(policies)
policies <- policies %>% mutate(exposure_days = exposure * 365)
policies %>% select(accident_month, claim_loss_date) %>% filter(!is.na(claim_loss_date))
policies %>%
select(accident_month, claim_loss_date) %>%
filter(!is.na(claim_loss_date)) %>%
filter(month(claim_loss_date) != month(accident_month) )
policies %>%
select(accident_month, claim_loss_date) %>%
filter(!is.na(claim_loss_date)) %>%
filter(month(claim_loss_date) != month(accident_month) ||
year(claim_loss_date) != year(accident_month))
TRUE || TRUE
TRUE || FALSE
filter(year(claim_loss_date) != year(accident_month))
policies %>%
select(accident_month, claim_loss_date) %>%
filter(!is.na(claim_loss_date)) %>%
filter(month(claim_loss_date) != month(accident_month)) %>%
filter(year(claim_loss_date) != year(accident_month))
TRUE | FALSE
TRUE | TRUE
policies %>%
select(accident_month, claim_loss_date) %>%
filter(!is.na(claim_loss_date)) %>%
filter(month(claim_loss_date) != month(accident_month) |
(year(claim_loss_date) != year(accident_month)))
library(lubridate)
library(dplyr)
View(policies)
policies %>% filter(!is.na(total_claims_cost) & is.na(claim_loss_date))
policies %>% filter(!is.na(total_claims_cost) & !is.na(claim_loss_date))
policies %>% filter(is.na(total_claims_cost) & !is.na(claim_loss_date))
policies %>% filter(!is.na(total_claims_cost) & !is.na(claim_loss_date))
View(policies %>% filter(!is.na(total_claims_cost) & !is.na(claim_loss_date)))
policies %>% select(policy_id, total_claims_cost, sum_insured) %>%
group_by(policy_id, sum_insured) %>% #sum insured should be unique per poilcy anyway
summarise(total_claims = sum(total_claims_cost))
ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)
policies %>% select(policy_id, total_claims_cost, sum_insured) %>%
group_by(policy_id, sum_insured) %>% #sum insured should be unique per poilcy anyway
summarise(total_claims = sum(ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)))
summarise(total_claims = sum(total_claims_payment))
policies %>% select(policy_id, total_claims_cost, sum_insured) %>%
group_by(policy_id, sum_insured) %>% #sum insured should be unique per poilcy anyway
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
summarise(total_claims = sum(total_claims_payment))
?mutate
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
select(policy_id, sum_insured, total_claims_payment) %>%
group_by(policy_id, sum_insured) %>% #sum insured should be unique per poilcy anyway
summarise(total_claims = sum(total_claims_payment))
asd
)
""
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
select(policy_id, sum_insured, total_claims_payment) %>%
filter(total_claims_payment != 0) %>%
group_by(policy_id, sum_insured) %>% #sum insured should be unique per poilcy anyway
summarise(total_claims = sum(total_claims_payment))
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
select(policy_id, sum_insured, total_claims_payment) %>%
filter(total_claims_payment != 0) %>%
group_by(policy_id, sum_insured) %>% #sum insured should be unique per poilcy anyway
summarise(total_claims = sum(total_claims_payment)) %>%
filter(total_claims > sum_insured)
policies %>%
select(policy_id, sum_insured, total_claims_cost) %>%
filter(total_claims_payment != 0) %>%
filter(total_claims > sum_insured)
policies %>%
select(policy_id, sum_insured, total_claims_cost) %>%
filter(!is.na(total_claims_claims)) %>%
filter(total_claims > sum_insured)
policies %>%
select(policy_id, sum_insured, total_claims_cost) %>%
filter(!is.na(total_claims_cost)) %>%
filter(total_claims > sum_insured)
policies %>%
select(policy_id, sum_insured, total_claims_cost) %>%
filter(!is.na(total_claims_cost)) %>%
filter(total_claims_cost > sum_insured)
# policies exposure 0 (another claim in a month)
policies %>% filter(exposure == 0) %>% select(policy_id, total_claims_cost, claim_loss_date)
# policies exposure 0 (another claim in a month)
policies %>% filter(exposure == 0)
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0))
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0) %>% select(policy_id))
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0) %>% select(unique(policy_id)))
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0) %>% select(policy_id) %>% group_by(policy_id))
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0) %>% group_by(policy_id) %>% select(policy_id))
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0) %>% group_by(policy_id))
# policies exposure 0 (another claim in a month)
View(policies %>% filter(exposure == 0) %>% group_by(policy_id) %>% select(policy_id) %>% summarise(n= n()))
policies %>%
select(policy_id, sum_insured, total_claims_cost) %>%
filter(!is.na(total_claims_cost)) %>%
filter(total_claims_cost == sum_insured)
policies %>%
select(policy_id, sum_insured, total_claims_cost) %>%
filter(!is.na(total_claims_cost)) %>%
filter(total_claims_cost<sum_insured)
glm.fit(policies$sum_insured, policies$total_claims_cost)
claims  <- policies %>% filter(!is.na(total_claims_cost) & !is.na(claim_loss_date)
)
glm.fit(claims$sum_insured, claims$total_claims_cost)
predict.glm(glm, newdata = as.numeric(list(levels(claims$sum_insured))))
as.numeric(list(levels(claims$sum_insured)))
as.numeric(levels(claims$sum_insured))
levels(claims$sum_insured)
levels(as.factor(claims$sum_insured))
as.numeric(levels(as.factor(claims$sum_insured)))
predict.glm(glm, newdata = as.numeric(levels(as.factor(claims$sum_insured))))
glm <- glm.fit(claims$sum_insured, claims$total_claims_cost)
predict.glm(glm, newdata = as.numeric(levels(as.factor(claims$sum_insured))))
?predict.glm
predict(glm, newdata = as.numeric(levels(as.factor(claims$sum_insured))), terms = NULL)
predict(glm, newdata = data.frame(sum_insured = as.numeric(levels(as.factor(claims$sum_insured)))))
glm <- glm(claims$total_claims_cost ~ claims$sum_insured)
predict(glm, newdata = data.frame(sum_insured = as.numeric(levels(as.factor(claims$sum_insured)))))
plot(predict(glm, newdata = data.frame(sum_insured = as.numeric(levels(as.factor(claims$sum_insured))))))
lm <- lm(claims$total_claims_cost ~ claims$sum_insured)
plot(predict(lm, newdata = data.frame(sum_insured = as.numeric(levels(as.factor(claims$sum_insured))))))
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_payment), total_exposure_days = sum(exposure_days))
policies %>%
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_payment), total_exposure_days = sum(exposure_days))
policies %>%
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_cost), total_exposure_days = sum(exposure_days))
claims %>%
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_cost), total_exposure_days = sum(exposure_days))
View(policies)
View(policies)
policies %>%
group_by(policy_id) %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
summarise(total_payment = sum(total_claims_cost), total_exposure_days = sum(exposure_days))
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_cost), total_exposure_days = sum(exposure_days))
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_payment), total_exposure_days = sum(exposure_days))
# policy each record data
# how much each policy paid and for what exposure length.
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
group_by(policy_id, term_start_date) %>%
summarise(total_payment = sum(total_claims_payment), total_exposure_days = sum(exposure_days))
# policy each record data
# how much each policy paid and for what exposure length.
policies %>%
mutate(total_claims_payment = ifelse(is.na(policies$total_claims_cost), 0, policies$total_claims_cost)) %>%
group_by(policy_id) %>%
summarise(total_payment = sum(total_claims_payment), total_exposure_days = sum(exposure_days), start_date = min(term_start_date)) #assume policies are continuous (they are currently split up into years.)
claims %>%
group_by(tenure) %>%
summarise(total_cost = sum(total_claims_cost))
claims %>%
group_by(policy_tenure) %>%
summarise(total_cost = sum(total_claims_cost))
claims %>%
group_by(policy_tenure, term_start_date) %>%
summarise(total_cost = sum(total_claims_cost))
group_by(policy_tenure, year) %>%
summarise(total_cost = sum(total_claims_cost))
claims %>%
mutate(year = year(term_start_date)) %>%
group_by(policy_tenure, year) %>%
summarise(total_cost = sum(total_claims_cost))
summary(policies$policy_tenure)
hist(claims$policy_tenure)
